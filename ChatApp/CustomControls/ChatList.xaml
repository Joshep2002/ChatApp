<UserControl x:Class="ChatApp.CustomControls.ChatList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ChatApp.CustomControls"
             xmlns:animations="clr-namespace:ChatApp.Animations"
             xmlns:viewmodels="clr-namespace:ChatApp.ViewModels" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" MaxHeight="470" Width="Auto" MaxWidth="340" x:Name="_Chats">


    <UserControl.Resources>
        <DataTemplate x:Key="ChatButtonItemTemplate">
            <RadioButton
                Margin="0,3"
                GroupName="ChatButton">
                <RadioButton.Style>
                    <Style
                        TargetType="{x:Type RadioButton}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="MinHeight" Value="80"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Command" Value="{Binding DataContext.GetSelectedChatCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}} }"/>
                        <Setter Property="CommandParameter" Value="{Binding }"/>
                        <Setter Property="Content" Value="{Binding ContactName}"/>
                        <!-- Para seleccionar el primer Chat... Es opcional
                        no prefiero check el chat automaticamente asi que lo comento
                        por ahora
                        -->
                        <!-- <Setter Property="IsChecked" 
                                Value="{Binding ChatIsSelected,Mode=TwoWay,
                            UpdateSourceTrigger=PropertyChanged}"/>
                        -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border 
                                     x:Name="border"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     Padding="{TemplateBinding Padding}"
                                     HorizontalAlignment="Stretch"
                                     SnapsToDevicePixels="True"
                                     CornerRadius="20">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <!-- Contendra Nombre de Contacto, Foto,Mensaje, Tiempo de Mensaje-->
                                                <RowDefinition Height="Auto"/>
                                                <!-- Contendra conversaciones como archivo de cahat,pin,chat,eliminar-->
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Border 
                                                x:Name="bdChild" 
                                                Background="Transparent" 
                                                CornerRadius="20"
                                                VerticalAlignment="Stretch"
                                                HorizontalAlignment="Stretch"/>

                                            <!--#region Detalles de Contacto-->
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <!-- Foto de Perfil-->
                                                    <ColumnDefinition Width="Auto"/>

                                                    <!-- Nombre de Contacto & Mensaje-->
                                                    <ColumnDefinition/>

                                                    <!-- Tiempo de Ultimo Mensaje-->
                                                    <ColumnDefinition Width="Auto"/>

                                                </Grid.ColumnDefinitions>

                                                <Ellipse Width="50" Height="50">
                                                    <Ellipse.Fill>
                                                        <ImageBrush 
                                                        Stretch="UniformToFill"
                                                        ImageSource="{Binding ContactPhoto,FallbackValue='/Assets/6.jpg',TargetNullValue='/Assets/6.jpg',UpdateSourceTrigger=PropertyChanged}"/>
                                                    </Ellipse.Fill>
                                                </Ellipse>

                                                <!--#region Contacto y Mensaje-->
                                                <Grid
                                                Grid.Row="0"
                                                    Grid.ColumnSpan="2"
                                                Grid.Column="1"
                                                Margin="5,0,0,0">

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <!-- Nombre-->
                                                        <RowDefinition/>
                                                        <!-- Mensaje-->
                                                    </Grid.RowDefinitions>

                                                    <TextBlock
                                                    Text="{Binding ContactName}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                                <Setter Property="FontSize" Value="15"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger
                                                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                                                    Value="True"
                                                                    >
                                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                                        <Setter Property="FontSize" Value="18"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <TextBlock
                                                        Text="{Binding Message,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                                    Grid.Row="1">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="FontWeight" Value="Normal"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger
                                                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                                                                    Value="True"
                                                                    >
                                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                                        <!-- <Setter Property="Text" Value="Escribele, no pierdas mas tiempo!"/>-->
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>
                                                <!--#endregion-->

                                                <!--#region Ultimo Mensaje-->
                                                <Grid
                                                    Grid.Column="2"
                                                    Margin="0,0,15,0"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top">
                                                    <TextBlock 
                                                        Text="{Binding LastMessageTime}"/>
                                                </Grid>

                                            </Grid>
                                            <!--#endregion-->

                                            <!--#region Opciones-->
                                            <!-- To-Do: Animacion-->
                                            <Grid
                                                x:Name="OptionsGrid"
                                                Grid.Row="1"
                                                Height="0">

                                                <StackPanel>
                                                    
                                            
                                                <Separator Margin="0,4,0,0"/>
                                                
                                                <UniformGrid 
                                                    Grid.Column="1"
                                                    Columns="4">
                                                    <!--Pin/Unpin Chat Button-->
                                                    <Button
                                                        CommandParameter="{Binding }">
                                                        <!-- Para mostrar el icono de Unpinned y commando para unpinedd cuando el chat este pineed -->
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">
                                                                <!-- Chat Unpinned Normal-->
                                                                <Setter Property="Content" Value="{StaticResource pinned}"/>
                                                                <Setter Property="Command" Value="{Binding DataContext.PinChatCommand, ElementName=_Chats}"/>
                                                                <!--Estilos cuando el chat es pinned-->
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{ Binding ChatIsPinned}" Value="True">
                                                                        <Setter Property="Content" Value="{StaticResource unpin}"/>
                                                                        <Setter Property="Command" Value="{Binding DataContext.UnPinChatCommand, ElementName=_Chats}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>


                                                    <!-- Esto despues del search Command-->
                                                    <!--archive/ unarchive chat Button-->
                                                    <Button
                                                        CommandParameter="{Binding}">

                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonStyle}">

                                                                <Setter Property="Content" Value="{StaticResource archive}"/>
                                                                <Setter Property="Command" Value="{Binding DataContext.ArchivedChatCommand, ElementName=_Chats}"/>

                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ChatIsArchived}" Value="True">
                                                                        <Setter Property="Content" Value="{StaticResource unarchive}"/>
                                                                        <Setter Property="Command" Value="{Binding DataContext.UnArchivedChatCommand, ElementName=_Chats}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>




                                                    <Button Content="{StaticResource mute}" Style="{StaticResource IconButtonStyle}"/>
                                                    <Button Content="{StaticResource trash}" Style="{StaticResource IconButtonStyle}"/>

                                                </UniformGrid>

                                                </StackPanel>
                                            </Grid>
                                            <!--#endregion-->

                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <DoubleAnimation 
                                                            Storyboard.TargetName="OptionsGrid"
                                                            Storyboard.TargetProperty="Height" To="40"/>
                                                        <ColorAnimation 
Storyboard.TargetProperty="(Background).Color" From="Transparent" To="#49a078"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <DoubleAnimation 
                                                            Storyboard.TargetName="OptionsGrid"
                                                            Storyboard.TargetProperty="Height" To="0"/>
                                                        <ColorAnimation 
Storyboard.TargetProperty="(Background).Color" From="#49a078" To="Transparent"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>


                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation Storyboard.TargetName="bdChild"
Storyboard.TargetProperty="(Background).Color" From="Transparent" To="#dce1de"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation Storyboard.TargetName="bdChild"
Storyboard.TargetProperty="(Background).Color" From="#dce1de" To="Transparent"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </RadioButton.Style>
            </RadioButton>

        </DataTemplate>

        <Style x:Key="ArchivedButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition Width="Auto"/>
                                    
                                    <!-- Back Icon-->
                                    <ColumnDefinition/>

                                </Grid.ColumnDefinitions>

                                
                                <Grid  
                                    
                                    Grid.ColumnSpan="2" 
                                    x:Name="bg" 
                                    Opacity=".6"/>
                                <Path
                                    Data="{Binding Content, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type RadioButton}}}"
                                    Margin="20,0"
                                    Fill="Black"
                                    HorizontalAlignment="Left"
                                    Style="{StaticResource {x:Type Path}}"/>
                                <TextBlock
                                    Grid.ColumnSpan="2"
                                    TextAlignment="Center"
                                    FontWeight="SemiBold"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    
                                    <!--Archived Chat Count-->
                                    <Run Text="Archived ("/>
                                    <Run Text="{Binding DataContext.ArchivedChats.Count,Mode=OneWay, ElementName=_Chats}"/>
                                    <Run Text=")"/>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--Si no hay Chats Archived Ocultar el Boton-->
                            <DataTrigger Binding="{Binding DataContext.ArchivedChats.Count,ElementName=_Chats}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#dce1de"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bg" Property="Background" Value="#dce1de"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ANIMACION AL AGREGAR CHAT-->
        <ItemsPanelTemplate x:Key="aItemPanel">
            <StackPanel>
                <b:Interaction.Behaviors>
                    <b:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.25"/>
                </b:Interaction.Behaviors>
            </StackPanel>
        </ItemsPanelTemplate>
    </UserControl.Resources>

    <!-- To-Do: Scroll Bar Style-->
    <ScrollViewer 
        PanningMode="VerticalOnly"
        PreviewMouseWheel="ScrollViewerPreview"
        HorizontalScrollBarVisibility="Disabled">

        <Grid
            Margin="6,10" >
            <!--Hay que ocultar este grid cuando el chat archivado es abierto-->
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Visibility , ElementName=ArchivedPanel}" Value="Visible">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                    <!--Archive Chats-->
                </Grid.RowDefinitions>

                <!--Chat List Pinned/Unpinned & all chats-->
                <StackPanel>
                    <!--ocultar pinned chat si no hay chats pinned-->
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FilteredPinnedChats.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <StackPanel
                 Orientation="Horizontal"
                 Margin="10,5"
                 >

                        <Path
                        StrokeThickness="1"
                        Stroke="Black"
                  Margin="10,0"
                  Fill="Black"
                  Data="{StaticResource pinned  }"
                  />
                        <TextBlock
                      Text="Pinned"
                      FontWeight="SemiBold"
                      VerticalAlignment="Center">
                        </TextBlock>

                    </StackPanel>

                    <ItemsControl 
                     Padding="0.15"
                     ItemsSource="{Binding FilteredPinnedChats, UpdateSourceTrigger=PropertyChanged}"
                     ItemTemplate="{StaticResource ChatButtonItemTemplate}"
                     ItemsPanel="{StaticResource aItemPanel}">
                    </ItemsControl>
                </StackPanel>

                <StackPanel Grid.Row="1">

                    <!--Todos los Chat List-->
                    <StackPanel
  Orientation="Horizontal"
  Margin="10,5"
  >
                        <Path
   Margin="10,0"
   Fill="Black"
   Data="{StaticResource allchats}"
   />
                        <TextBlock
       Text="All Chats"
       FontWeight="SemiBold"
       VerticalAlignment="Center">
                        </TextBlock>
                    </StackPanel>
                    <!--since we want to show filtered chats on search-->
                    <ItemsControl 
                      ItemsPanel="{StaticResource aItemPanel}"
                      Padding="0.15"
                      ItemsSource="{Binding FilteredChats,UpdateSourceTrigger=PropertyChanged}"
                      ItemTemplate="{StaticResource ChatButtonItemTemplate}">
                    </ItemsControl>

                    <RadioButton 
                    x:Name="btnOpenArchived" 
                    GroupName="Archived" 
                    Style="{StaticResource ArchivedButtonStyle}"/>
                </StackPanel>

            </Grid>
            <!--Archived Chats-->
            <StackPanel 
                Grid.Row="1"
                x:Name="ArchivedPanel">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName= btnOpenArchived}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked, ElementName= btnCloseArchived}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Visibility, ElementName= btnCloseArchived}" Value="Collapsed">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <RadioButton
                    Margin="0,15"
                    IsChecked="True"
                    Content="{StaticResource back}"
                    Style="{StaticResource ArchivedButtonStyle}"
                    GroupName="Archived"
                    x:Name="btnCloseArchived"/>
                <ItemsControl
                    ItemTemplate="{StaticResource  ChatButtonItemTemplate}"
                    ItemsSource="{Binding ArchivedChats}"
                    ItemsPanel="{StaticResource aItemPanel}"
                    BorderThickness="0"
                    Background="Transparent"/>

            </StackPanel>

        </Grid>
    </ScrollViewer>


</UserControl>
