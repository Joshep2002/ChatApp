<UserControl x:Class="ChatApp.CustomControls.Conversation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             
             xmlns:local="clr-namespace:ChatApp.AttachedProperties"
             xmlns:animations="clr-namespace:ChatApp.Animations" 
             xmlns:viewmodel="clr-namespace:ChatApp.ViewModels" xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             Width="Auto"
             x:Name="_conversations">

    <UserControl.Resources>
        <Style x:Key="MessageTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <!-- Para ajustar el texto a la siguiente linea: -->
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Text" Value="{Binding  ReceivedMessage}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                    <Setter Property="Text" Value="{Binding SentMessage}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>



        <DataTemplate x:Key="ItemTemplate">
            <Button>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Padding" Value="4,1"/>
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">

                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border 
                                      x:Name="border"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalAlignment="Left"
                                      SnapsToDevicePixels="True">

                                        <Grid>
                                            <Grid.RowDefinitions>

                                                <!-- Burbuja de Reply-->
                                                <RowDefinition Height="Auto"/>

                                                <!-- Burbuja de Mensaje-->
                                                <RowDefinition/>

                                                <!-- Tiempo de Mensaje-->
                                                <RowDefinition Height="Auto"/>

                                            </Grid.RowDefinitions>

                                            <!--#region Burbuja de Mensaje-->
                                            <Grid
                                                Grid.Row="1">
                                                <Grid.ColumnDefinitions>

                                                    <!-- Columna de btnReply-->
                                                    <ColumnDefinition Width="Auto"/>

                                                    <!-- Columna de Burbuja de Mensaje-->
                                                    <ColumnDefinition/>

                                                    <!-- Columna de btnReply-->
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!-- Burbuja de Mensaje-->
                                                <Border
                                                    MaxWidth="600"
                                                    Height="Auto"
                                                    Grid.Column="1"
                                                    MinHeight="60"
                                                    VerticalAlignment="Center">

                                                    <Border.Style>
                                                        <!-- Para cambiar el color de nuestra burbuja en el 
                                                        mensaje recibido y el mensaje enviado-->
                                                        <Style TargetType="{x:Type Border}">
                                                            <!-- If(IsMessageReceived)-->
                                                            <Setter Property="CornerRadius"                                                                                 Value="30,30,30,0"/>
                                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                                            <Setter Property="Background" Value="#dce1de"/>
                                                            <Style.Triggers>
                                                                <!--else-->
                                                                <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                                                    <Setter Property="CornerRadius" Value="30,30,0,30"/>
                                                                    <Setter Property="Background" Value="#49a078"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Right"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <!-- Mensage de Texto-->
                                                    <!-- El DockPanel es usado aqui para expandir de acuerdo al length y al maximo de                       ancho del mensage es el limite de expancion-->
                                                    <DockPanel
                                                        MaxHeight="700">
                                                        <TextBlock  Style="{StaticResource MessageTextStyle}"/>
                                                    </DockPanel>
                                                </Border>

                                                <!--btnReply-->
                                                <Button
                                                    x:Name="btnReply"

                                                   Visibility="Collapsed"
                                                   Grid.Column="2"
                                                    Command="{Binding DataContext.ReplyCommand,ElementName=_conversations}"
                                                   CommandParameter="{Binding}"
                                                    Style="{StaticResource IconButtonStyle}"
                                                   Content="{StaticResource reply}">
                                                </Button>
                                            </Grid>
                                            <!--#endregion-->

                                            <!--#region Tiempo de Mensaje-->
                                            <TextBlock 
                                                Grid.Row="2"
                                                Opacity="0"
                                                x:Name="messageTime">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                                        <Setter Property="Margin" Value="0,10,20,0"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsMessageReceived}" Value="True">
                                                                <Setter Property="Text" Value="{Binding MsgReceivedOn}"/>
                                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                                                <Setter Property="Text" Value="{Binding MsgSentOn}"/>
                                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                                <Setter Property="Padding" Value="0,0,30,0"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <!--#endregion-->
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsMessageReceived}" Value="False">
                                            <Setter TargetName="btnReply" Property="Grid.Column" Value="0" />
                                            <Setter TargetName="border" Property="HorizontalAlignment" Value="Right" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="btnReply" Property="Visibility" Value="Visible" />
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation 
                                                            Storyboard.TargetName="messageTime"
                                                            Storyboard.TargetProperty="Opacity" To="1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                           
                                            </Trigger.EnterActions>
                                            
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation 
                                                               Storyboard.TargetName="messageTime"
                                                               Storyboard.TargetProperty="Opacity" To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>

                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </Button.Style>
            </Button>
        </DataTemplate>
    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>

            <RowDefinition Height="Auto"/>

            <RowDefinition />

        </Grid.RowDefinitions>

        <!--#region SearchBox-->
        <Border 
            Grid.Row="0"
               Background="#dce1de"
               CornerRadius="15"
               Margin="20"
               Height="50"
               x:Name="searchBoxBorder"
               FocusManager.FocusedElement="{Binding ElementName=searchQuery}">
            <!--Ocultar SearchBox cuando no tenga texto-->
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSearchConversationBoxOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=False}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </Border.Style>

            <TextBox
    Background="Transparent"
    BorderThickness="0" 
    x:Name="searchQuery"
    Padding="12,0"
    Text="{Binding SearchConversationText, UpdateSourceTrigger=PropertyChanged}"
    VerticalAlignment="Center"
    HorizontalAlignment="Stretch"
    >
                <!-- Key Binding to Search on "Enter" key press -->
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding SearchConversationCommand}" Key="Return"/>
                    <KeyBinding Command="{Binding ClearConversationSearchCommand}" Key="Esc"/>
                </TextBox.InputBindings>
            </TextBox>
        </Border>
        <!--#endregion-->

        <!-- To-Do: Agregar propiedad adjunta al 
        desplazamiento automático a la parte inferior-->
        <ScrollViewer   
            local:ScrollViewerAttachedProperties.AutoScroll="True"
             Style="{StaticResource ScrollViewerStyle}"
             PreviewMouseWheel="ScrollViewerPreview"
             Background="WhiteSmoke"
             HorizontalScrollBarVisibility="Disabled"
             Grid.Row="1">
            <ItemsControl
                ItemTemplate="{StaticResource ItemTemplate}"
                ItemsSource="{Binding FilteredConversations,UpdateSourceTrigger=PropertyChanged}"
                Margin="15,0,0,0">
                <!--ScrollViewer.HorizontalScrollBarVisibility="Disabled"-->

                <ItemsControl.ItemsPanel>
                    <!--ANIMACION AL AGREGAR CHAT-->
                        <ItemsPanelTemplate>
                            <StackPanel>
                                <b:Interaction.Behaviors>
                                    <b:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.25"/>
                                </b:Interaction.Behaviors>
                            </StackPanel>
                        </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
